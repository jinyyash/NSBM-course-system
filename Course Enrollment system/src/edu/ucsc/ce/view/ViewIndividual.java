/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ucsc.ce.view;

import edu.ucsc.ce.controllers.ExamController;
import edu.ucsc.ce.controllers.Facultycontroller;
import edu.ucsc.ce.controllers.StudentController;
import edu.ucsc.ce.methods.ComboBoxFilling;
import edu.ucsc.ce.models.ExamDTO;
import edu.ucsc.ce.models.FacultyDTO;
import edu.ucsc.ce.models.ResultDTO;
import edu.ucsc.ce.models.StudentDTO;
import static edu.ucsc.ce.view.AddStudentForm.cmbfac;
import static edu.ucsc.ce.view.AddStudentForm.fac;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jinadi
 */
public class ViewIndividual extends javax.swing.JPanel {

    /**
     * Creates new form ViewUndergraduates
     */
    ArrayList<StudentDTO> studentDTOs = new ArrayList<>();
    ArrayList<ExamDTO> examDTOs = new ArrayList<>();

    public ViewIndividual() {
        initComponents();
        
        loadStudent();
        loadExam();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cmbSt = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cmbExam = new javax.swing.JComboBox<>();
        lblName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblCourse = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setOpaque(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmbSt.setEditable(true);
        cmbSt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmbSt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbStItemStateChanged(evt);
            }
        });
        jPanel1.add(cmbSt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 189, 48));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Exam ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(412, 22, 76, 48));

        cmbExam.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmbExam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        cmbExam.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbExamItemStateChanged(evt);
            }
        });
        jPanel1.add(cmbExam, new org.netbeans.lib.awtextra.AbsoluteConstraints(506, 22, 226, 48));

        lblName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblName.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 180, 48));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Student ID");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 145, 48));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Name");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 145, 48));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Course");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, 145, 48));

        lblCourse.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCourse.setForeground(new java.awt.Color(255, 255, 255));
        lblCourse.setText("Student ID");
        jPanel1.add(lblCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 90, 180, 48));

        jButton1.setBackground(new java.awt.Color(0, 102, 204));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("E-mail");
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, 140, 40));

        jButton2.setBackground(new java.awt.Color(0, 102, 204));
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("Print");
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 150, 140, 40));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 200));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Exam", "Subject", "Date", "Result", "Grade"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 780, 270));
    }// </editor-fold>//GEN-END:initComponents

    private void cmbExamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbExamItemStateChanged

    }//GEN-LAST:event_cmbExamItemStateChanged

    private void cmbStItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbStItemStateChanged
        studentResult();
        lblName.setText(studentDTOs.get(cmbSt.getSelectedIndex()).getName());
        lblCourse.setText(studentDTOs.get(cmbSt.getSelectedIndex()).getCourseDTO().getName());
    }//GEN-LAST:event_cmbStItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbExam;
    private javax.swing.JComboBox<String> cmbSt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCourse;
    private javax.swing.JLabel lblName;
    // End of variables declaration//GEN-END:variables

    private void studentResult() {
        if (cmbExam.getSelectedIndex() == 0) {
           getAllStudentExam();
        } else {
            //getStudentExam();
        }
    }

    private void getAllStudentExam() {
        try {
            System.out.println(cmbSt.getSelectedIndex());
            ArrayList<ResultDTO> al = ExamController.getAllResultForStudent(studentDTOs.get(cmbSt.getSelectedIndex()).getSid());
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            for (ResultDTO resultDTO : al) {
                Object[] row = {resultDTO.getExamDTO().getExamType(), resultDTO.getExamDTO().getSubjectDTO().getName(), resultDTO.getExamDTO().getDate(), resultDTO.getResult(), resultDTO.getGrade()};
                dtm.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ViewIndividual.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewIndividual.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getStudentExam() {
        try {
            ArrayList<ResultDTO> al = ExamController.getAllResultForStudentExam(studentDTOs.get(cmbSt.getSelectedIndex()).getSid(), examDTOs.get(cmbExam.getSelectedIndex() - 1).getEid());
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            for (ResultDTO resultDTO : al) {
                Object[] row = {resultDTO.getExamDTO().getExamType(), resultDTO.getExamDTO().getSubjectDTO().getName(), resultDTO.getExamDTO().getDate(), resultDTO.getResult(), resultDTO.getGrade()};
                dtm.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ViewIndividual.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewIndividual.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadExam() {
        try {
            examDTOs = ExamController.getAll();
            for (ExamDTO dTO : examDTOs) {
                cmbExam.addItem(dTO.getEid());
            }
            ComboBoxFilling combo = new ComboBoxFilling();
            combo.setSearchableCombo(cmbExam, true, "No eXAM found");
        } catch (SQLException ex) {
            Logger.getLogger(ViewIndividual.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewIndividual.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadStudent() {
        try {
            studentDTOs = StudentController.getAll();
            for (StudentDTO dTO : studentDTOs) {
                cmbSt.addItem(dTO.getSid());
            }
            ComboBoxFilling combo = new ComboBoxFilling();
            combo.setSearchableCombo(cmbSt, true, "No Student found");
        } catch (SQLException ex) {
            Logger.getLogger(ViewIndividual.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewIndividual.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
